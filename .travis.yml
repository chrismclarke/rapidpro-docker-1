sudo: required
language: python
services:
  - docker
cache:
  directories:
    - $HOME/postgresql

env:
  global:
    - GREP_TIMEOUT=360
    
  matrix:
    - IMAGE="nyaruka/rapidpro" VERSION="" REPO="nyaruka/rapidpro"

# Update Docker Engine
before_install:
  - sudo apt-get update
  - sudo apt-get install -qy -o Dpkg::Options::="--force-confold" docker-ce coreutils

before_cache:
  - docker exec --user=postgres postgresql pg_dump rapidpro > $HOME/postgresql/rapidpro.sql

before_script:
  - 'curl -H "Authorization: Bearer $GITHUB_ACCESS_TOKEN" -s https://api.github.com/repos/$REPO/tags | tee ./tags.json'
  - LATEST_TAG=$(cat ./tags.json | jq -r '.[0].name')
  - VERSION=${VERSION:-$LATEST_TAG}

install:
  - echo "preventing default pip install here"

script:
  # Setup postgresql and load sql dump if exists
  - docker pull mdillon/postgis:9.6
  - docker run -d --name postgresql -e POSTGRES_DB=rapidpro mdillon/postgis:9.6
  - timeout $GREP_TIMEOUT grep -m 1 'PostgreSQL init process complete; ready for start up.' <(docker logs --follow postgresql 2>&1)
  # Load the cached postgresql dump to speed up migrations
  - if [[ -f $HOME/postgresql/rapidpro.sql ]]; then cat $HOME/postgresql/rapidpro.sql | docker exec -i --user=postgres postgresql psql rapidpro; fi

  # Setup redis
  - docker pull redis:alpine
  - docker run -d --name redis redis:alpine
  - timeout $GREP_TIMEOUT grep -m 1 'Ready to accept connections' <(docker logs --follow redis 2>&1)

  # Build RapidPro and run it
  - docker pull rapidpro/rapidpro-base:v4
  - docker pull "$IMAGE"
  - >
    docker build --pull --cache-from "$IMAGE" \
      --tag "$IMAGE" \
      --build-arg RAPIDPRO_VERSION=$VERSION \
      --build-arg RAPIDPRO_REPO=$REPO \
      .
  - >
    docker run --name rapidpro \
      --env-file docker.envfile \
      --link redis \
      --link postgresql \
      --publish 8000:8000 \
      --detach \
      "$IMAGE"

  - timeout $GREP_TIMEOUT grep -m 1 'static files copied' <(docker logs --follow rapidpro 2>&1)
  - timeout $GREP_TIMEOUT grep -m 1 'Compressing... done' <(docker logs --follow rapidpro 2>&1)
  - timeout $GREP_TIMEOUT grep -m 1 'Running migrations' <(docker logs --follow rapidpro 2>&1)
  # See docker.envfile for the switch to turn this on. Defaults to off because these API
  # calls are subject to GitHub's rate limiting of Travis CI IPs
  # - timeout $GREP_TIMEOUT grep -m 1 'Downloading geojson for relation_ids 192796' <(docker logs --follow rapidpro 2>&1)
  # - timeout $GREP_TIMEOUT grep -m 1 'Imported geojson for relation_ids 192796' <(docker logs --follow rapidpro 2>&1)
  - timeout $GREP_TIMEOUT grep -m 1 'spawned uWSGI http 1' <(docker logs --follow rapidpro 2>&1)
  - docker exec rapidpro /venv/bin/python /rapidpro/manage.py check

after_script:
  - docker logs rapidpro
  - docker images

before_deploy:
  - pip install docker-ci-deploy==0.3.0
  - echo -n $REGISTRY_PASS | docker login -u "$REGISTRY_USER" --password-stdin
deploy:
  provider: script
  skip_cleanup: true
  script: dcd --tag-version "$VERSION" --tag-semver --tag-latest "$IMAGE"
  on:
    branch: master
